using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace UnderworldEditor
{
    class PlayerDatNames
    {
        public static string UW1FieldName(int index)
        {
            switch (index)
            {
                case 0x0: return "XOR Key";
                case 0x1: return "NAME";
                case 0x2: return "NAME";
                case 0x3: return "NAME";
                case 0x4: return "NAME";
                case 0x5: return "NAME";
                case 0x6: return "NAME";
                case 0x7: return "NAME";
                case 0x8: return "NAME";
                case 0x9: return "NAME";
                case 0xA: return "NAME";
                case 0xB: return "NAME";
                case 0xC: return "NAME";
                case 0xD: return "NAME";
                case 0xE: return "unused";
                case 0xF: return "unused";
                case 0x10: return "unused";
                case 0x11: return "unused";
                case 0x12: return "unused";
                case 0x13: return "unused";
                case 0x14: return "unused";
                case 0x15: return "unused";
                case 0x16: return "unused";
                case 0x17: return "unused";
                case 0x18: return "unused";
                case 0x19: return "unused";
                case 0x1A: return "unused";
                case 0x1B: return "unused";
                case 0x1C: return "unused";
                case 0x1D: return "unused";
                case 0x1E: return "unused";
                case 0x1F: return "Strength";
                case 0x20: return "Dexterity";
                case 0x21: return "Intelligence";
                case 0x22: return "Attack";
                case 0x23: return "Defense";
                case 0x24: return "Unarmed";
                case 0x25: return "Sword";
                case 0x26: return "Axe";
                case 0x27: return "Mace";
                case 0x28: return "Missile";
                case 0x29: return "Mana";
                case 0x2A: return "Lore";
                case 0x2B: return "Casting";
                case 0x2C: return "Traps";
                case 0x2D: return "Search";
                case 0x2E: return "Track";
                case 0x2F: return "Sneak";
                case 0x30: return "Repair";
                case 0x31: return "Charm";
                case 0x32: return "Picklock";
                case 0x33: return "Acrobat";
                case 0x34: return "Appraise";
                case 0x35: return "Swimming";
                case 0x36: return "Current vit";
                case 0x37: return "max.vit";
                case 0x38: return "play mana";
                case 0x39: return "max. Mana";
                case 0x3A: return "play_hunger";
                case 0x3B: return "fatigue";
                case 0x3C: return "unknown";
                case 0x3D: return "unknown";
                case 0x3E: return "character_Level";
                case 0x3F: return "ActiveSpell1";
                case 0x40: return "ActiveSpell1";
                case 0x41: return "ActiveSpell2";
                case 0x42: return "ActiveSpell2";
                case 0x43: return "ActiveSpell3";
                case 0x44: return "ActiveSpell3";
                case 0x45: return "RuneBits";
                case 0x46: return "RuneBits";
                case 0x47: return "RuneBits";
                case 0x48: return "Selected Rune (0x24 is none)";
                case 0x49: return "Selected Rune";
                case 0x4A: return "Selected Rune";
                case 0x4B: return "No of items in inventory? Shifted left?";
                case 0x4C: return "unknown";
                case 0x4D: return "Weight";
                case 0x4E: return "Weight";
                case 0x4F: return "experience in 0.1 points";
                case 0x50: return "experience in 0.1 points";
                case 0x51: return "experience in 0.1 points";
                case 0x52: return "experience in 0.1 points";
                case 0x53: return "Skillpoints available to spend";
                case 0x54: return "ditto?";
                case 0x55: return "xpos";
                case 0x56: return "xpos";
                case 0x57: return "ypos";
                case 0x58: return "ypos";
                case 0x59: return "zpos";
                case 0x5A: return "zpos";
                case 0x5B: return "unknown";
                case 0x5C: return "heading";
                case 0x5D: return "Dungeon level";
                case 0x5E: return "unknown";
                case 0x5F: return "High nibble is level of silver tree. Low nibble is the level of the moon stone";
                case 0x60: return "Incense dream bits (0-1)   , play_poison (bits 2-5) , No of Active spells bits (6-7)";
                case 0x61: return "Various plot flags";
                case 0x62: return "Shrooms, intoxication, is garamon buried";
                case 0x63: return "MiscQuestVars";
                case 0x64: return "Light level. (bits 5 to 8)";
                case 0x65: return "Handedness/Gender/Body/charclass";
                case 0x66: return "QuestFlags(0-31)";
                case 0x67: return "QuestFlags(0-31)";
                case 0x68: return "QuestFlags(0-31)";
                case 0x69: return "QuestFlags(0-31)";
                case 0x6A: return "QuestFlag 32";
                case 0x6B: return "QuestFlag 33";
                case 0x6C: return "QuestFlag 34";
                case 0x6D: return "QuestFlag 35";
                case 0x6E: return "TalismansRemaining";
                case 0x6F: return "GaramonDreamRelatd";
                case 0x70: return "unknown";
                case 0x71: return "variable0";
                case 0x72: return "variable1";
                case 0x73: return "variable2";
                case 0x74: return "variable3";
                case 0x75: return "variable4";
                case 0x76: return "variable5";
                case 0x77: return "variable6";
                case 0x78: return "variable7";
                case 0x79: return "variable8";
                case 0x7A: return "variable9";
                case 0x7B: return "variable10";
                case 0x7C: return "variable11";
                case 0x7D: return "variable12";
                case 0x7E: return "variable13";
                case 0x7F: return "variable14";
                case 0x80: return "variable15";
                case 0x81: return "variable16";
                case 0x82: return "variable17";
                case 0x83: return "variable18";
                case 0x84: return "variable19";
                case 0x85: return "variable20";
                case 0x86: return "variable21";
                case 0x87: return "variable22";
                case 0x88: return "variable23";
                case 0x89: return "variable24";
                case 0x8A: return "variable25";
                case 0x8B: return "variable26";
                case 0x8C: return "variable27";
                case 0x8D: return "variable28";
                case 0x8E: return "variable29";
                case 0x8F: return "variable30";
                case 0x90: return "variable31";
                case 0x91: return "variable32";
                case 0x92: return "variable33";
                case 0x93: return "variable34";
                case 0x94: return "variable35";
                case 0x95: return "variable36";
                case 0x96: return "variable37";
                case 0x97: return "variable38";
                case 0x98: return "variable39";
                case 0x99: return "variable40";
                case 0x9A: return "variable41";
                case 0x9B: return "variable42";
                case 0x9C: return "variable43";
                case 0x9D: return "variable44";
                case 0x9E: return "variable45";
                case 0x9F: return "variable46";
                case 0xA0: return "variable47";
                case 0xA1: return "variable48";
                case 0xA2: return "variable49";
                case 0xA3: return "variable50";
                case 0xA4: return "variable51";
                case 0xA5: return "52";
                case 0xA6: return "unknown";
                case 0xA7: return "unknown";
                case 0xA8: return "unknown";
                case 0xA9: return "unknown";
                case 0xAA: return "unknown";
                case 0xAB: return "unknown";
                case 0xAC: return "unknown";
                case 0xAD: return "unknown";
                case 0xAE: return "unknown";
                case 0xAF: return "unknown";
                case 0xB0: return "unknown";
                case 0xB1: return "True Max Mana for the orb rock";
                case 0xB2: return "unknown";
                case 0xB3: return "unknown";
                case 0xB4: return "unknown";
                case 0xB5: return "Difficulty (?)";
                case 0xB6: return "Game options";
                case 0xB7: return "unknown";
                case 0xB8: return "unknown";
                case 0xB9: return "unknown";
                case 0xBA: return "unknown";
                case 0xBB: return "unknown";
                case 0xBC: return "unknown";
                case 0xBD: return "unknown";
                case 0xBE: return "unknown";
                case 0xBF: return "unknown";
                case 0xC0: return "unknown";
                case 0xC1: return "unknown";
                case 0xC2: return "unknown";
                case 0xC3: return "unknown";
                case 0xC4: return "unknown";
                case 0xC5: return "unknown";
                case 0xC6: return "unknown";
                case 0xC7: return "unknown";
                case 0xC8: return "unknown";
                case 0xC9: return "unknown";
                case 0xCA: return "unknown";
                case 0xCB: return "unknown";
                case 0xCC: return "unknown";
                case 0xCD: return "unknown";
                case 0xCE: return "unknown";
                case 0xCF: return "Gametime related (frame ticks?)";
                case 0xD0: return "Gametime related";
                case 0xD1: return "Hour of day (sort of)";
                case 0xD2: return "Game Day (sort of)";
                case 0xD3: return "No of inventory items held plus 1";
                case 0xD4: return "No of inventory items held plus 1";
                case 0xD5: return "Blocks interaction with the world?";
                case 0xD6: return "Clip through bridges when jumping a second time when this is not set";
                case 0xD7: return "unknown";
                case 0xD8: return "unknown";
                case 0xD9: return "unknown";
                case 0xDA: return "unknown";
                case 0xDB: return "Inventory only works when this is set.";
                case 0xDC: return "unknown";
                case 0xDD: return "Curvit as well?";
                case 0xDE: return "unknown";
                case 0xDF: return "unknown";
                case 0xE0: return "unknown";
                case 0xE1: return "?";
                case 0xE2: return "unknown";
                case 0xE3: return "unknown";
                case 0xE4: return "unknown";
                case 0xE5: return "unknown";
                case 0xE6: return "unknown";
                case 0xE7: return "unknown";
                case 0xE8: return "unknown";
                case 0xE9: return "unknown";
                case 0xEA: return "unknown";
                case 0xEB: return "unknown";
                case 0xEC: return "unknown";
                case 0xED: return "unknown";
                case 0xEE: return "unknown";
                case 0xEF: return "unknown";
                case 0xF0: return "unknown";
                case 0xF1: return "unknown";
                case 0xF2: return "unknown";
                case 0xF3: return "unknown";
                case 0xF4: return "unknown";
                case 0xF5: return "unknown";
                case 0xF6: return "unknown";
                case 0xF7: return "unknown";
                case 0xF8: return "Helm (all of these subsequent values are indices into the object list at offset 312";
                case 0xF9: return "Helm (enchantments are reapply on reload)";
                case 0xFA: return "Chest";
                case 0xFB: return "Chest";
                case 0xFC: return "Gloves";
                case 0xFD: return "Gloves";
                case 0xFE: return "Leggings";
                case 0xFF: return "Leggings";
                case 0x100: return "Boots";
                case 0x101: return "Boots";
                case 0x102: return "TopRightShoulder";
                case 0x103: return "TopRightShoulder";
                case 0x104: return "TopLeftShoulder";
                case 0x105: return "TopLeftShoulder";
                case 0x106: return "Righthand";
                case 0x107: return "Righthand";
                case 0x108: return "LeftHand";
                case 0x109: return "LeftHand";
                case 0x10A: return "RightRing";
                case 0x10B: return "RightRing";
                case 0x10C: return "LeftRing";
                case 0x10D: return "LeftRing";
                case 0x10E: return "Backpack0";
                case 0x10F: return "Backpack0";
                case 0x110: return "Backpack1";
                case 0x111: return "Backpack1";
                case 0x112: return "Backpack2";
                case 0x113: return "Backpack2";
                case 0x114: return "Backpack3";
                case 0x115: return "Backpack3";
                case 0x116: return "Backpack4";
                case 0x117: return "Backpack4";
                case 0x118: return "Backpack5";
                case 0x119: return "Backpack5";
                case 0x11A: return "Backpack6";
                case 0x11B: return "Backpack6";
                case 0x11C: return "Backpack7";
                case 0x11D: return "Backpack7";
                case 0x11E: return "unknown";
                case 0x11F: return "unknown";
                case 0x120: return "unknown";
                case 0x121: return "unknown";
                case 0x122: return "unknown";
                case 0x123: return "unknown";
                case 0x124: return "unknown";
                case 0x125: return "unknown";
                case 0x126: return "unknown";
                case 0x127: return "unknown";
                case 0x128: return "unknown";
                case 0x129: return "unknown";
                case 0x12A: return "unknown";
                case 0x12B: return "unknown";
                case 0x12C: return "unknown";
                case 0x12D: return "unknown";
                case 0x12E: return "unknown";
                case 0x12F: return "unknown";
                case 0x130: return "unknown";
                case 0x131: return "unknown";
                case 0x132: return "unknown";
                case 0x133: return "unknown";
                case 0x134: return "unknown";
                case 0x135: return "unknown";
                case 0x136: return "unknown";
                case 0x137: return "unknown";
                default:
                    {
                        if (index > 0x137)
                        {
                            return "inventory";
                        }
                        else
                        {
                            return "UNKNOWN";
                        }
                    }
            }
        }


        /*****************/
        public static string UW2FieldName(int index)
        {
            switch (index)
            {
                case 0: return "XOR Key";
                case 1: return "NAME";
                case 2: return "NAME";
                case 3: return "NAME";
                case 4: return "NAME";
                case 5: return "NAME";
                case 6: return "NAME";
                case 7: return "NAME";
                case 8: return "NAME";
                case 9: return "NAME";
                case 10: return "NAME";
                case 11: return "NAME";
                case 12: return "NAME";
                case 13: return "NAME";
                case 14: return "unused";
                case 15: return "unused";
                case 16: return "unused";
                case 17: return "unused";
                case 18: return "unused";
                case 19: return "unused";
                case 20: return "unused";
                case 21: return "unused";
                case 22: return "unused";
                case 23: return "unused";
                case 24: return "unused";
                case 25: return "unused";
                case 26: return "unused";
                case 27: return "unused";
                case 28: return "unused";
                case 29: return "unused";
                case 30: return "unused";
                case 31: return "Strength";
                case 32: return "Dexterity";
                case 33: return "Intelligence";
                case 34: return "Attack";
                case 35: return "Defense";
                case 36: return "Unarmed";
                case 37: return "Sword";
                case 38: return "Axe";
                case 39: return "Mace";
                case 40: return "Missile";
                case 41: return "Mana";
                case 42: return "Lore";
                case 43: return "Casting";
                case 44: return "Traps";
                case 45: return "Search";
                case 46: return "Track";
                case 47: return "Sneak";
                case 48: return "Repair";
                case 49: return "Charm";
                case 50: return "Picklock";
                case 51: return "Acrobat";
                case 52: return "Appraise";
                case 53: return "Swimming";
                case 54: return "Current vit";
                case 55: return "max.vit";
                case 56: return "play mana";
                case 57: return "max. Mana";
                case 58: return "play_hunger";
                case 59: return "fatigue";
                case 62: return "character_Level";
                case 63: return "ActiveSpell1";
                case 64: return "ActiveSpell1";
                case 65: return "ActiveSpell2";
                case 66: return "ActiveSpell2";
                case 67: return "ActiveSpell3";
                case 68: return "ActiveSpell3";
                case 69: return "RuneBits";
                case 70: return "RuneBits";
                case 71: return "RuneBits";
                case 72: return "Selected Rune (0x24 is none)";
                case 73: return "Selected Rune";
                case 74: return "Selected Rune";
                case 75: return "No of items in inventory (?)";
                case 77: return "Weight (x10)";
                case 78: return "Weight";
                case 79: return "experience in 0.1 points";
                case 80: return "experience in 0.1 points";
                case 81: return "experience in 0.1 points";
                case 82: return "experience in 0.1 points";
                case 83: return "Skillpoints available to spend";
                case 85: return "xpos";
                case 86: return "xpos";
                case 87: return "ypos";
                case 88: return "ypos";
                case 89: return "zpos";
                case 90: return "zpos";
                case 92: return "heading";
                case 93: return "Dungeon level";
                case 95:
                    return " Low nibble is the level of the moon stone";
               case 97: return "play_poison & active spell count";
                case 98: return "Drunkeness bits 6 to 11";
                case 99: return "drunkeness continued";
                case 100: return "Various bits";
                case 101: return "Light Level  Bits 4-7";
                case 102: return "Handedness/Gender/Body/charclass";
                case 103: return "Quests 0 to 3";
                case 107: return "Quests 4 to 7";
                case 111: return "Quests 8 to 11";
                case 115: return "Quests 12 to 15";
                case 119: return "Quests 16 to 19";
                case 123: return "Quests 20 to 23";
                case 127: return "Quests 24 to 27";
                case 131: return "Quests 28 to 31";
                case 135: return "Quests 32 to 35";
                case 139: return "Quests 36 to 39";
                case 143: return "Quests 40 to 43";
                case 147: return "Quests 44 to 47";
                case 151: return "Quests 48 to 51";
                case 155: return "Quests 52 to 55";
                case 159: return "Quests 56 to 59";
                case 163: return "Quests 60 to 63";
                case 167: return "Quests 64 to 67";
                case 171: return "Quests 68 to 71";
                case 175: return "Quests 72 to 75";
                case 179: return "Quests 76 to 79";
                case 183: return "Quests 80 to 83";
                case 187: return "Quests 84 to 87";
                case 191: return "Quests 88 to 91";
                case 195: return "Quests 92 to 95";
                case 199: return "Quests 96 to 99";
                case 203: return "Quests 100 to 103";
                case 207: return "Quests 104 to 107";
                case 211: return "Quests 108 to 111";
                case 215: return "Quests 112 to 115";
                case 219: return "Quests 116 to 119";
                case 223: return "Quests 120 to 123";
                case 227: return "Quests 124 to 127";
                case 231: return "Quest 128";
                case 232: return "Quest 129";
                case 233: return "Quest 130";
                case 234: return "Quest 131";
                case 235: return "Quest 132";
                case 236: return "Quest 133";
                case 237: return "Quest 134";
                case 238: return "Quest 135";
                case 239: return "Quest 136";
                case 240: return "Quest 137";
                case 241: return "Quest 138";
                case 247: return "Quest 144? Special case in conversaton:getquest. Initialised to 8";
                case 248: return "Tested in dream world";
                case 249: return "Automap related";
                case 250: return "Variable0";
                case 252: return "Variable1";
                case 254: return "Variable2";
                case 256: return "Variable3";
                case 258: return "Variable4";
                case 260: return "Variable5";
                case 262: return "Variable 6";
                case 264: return "Variable7";
                case 266: return "Variable8";
                case 268: return "Variable9";
                case 270: return "Variable10";
                case 272: return "Variable11";
                case 274: return "Variable12";
                case 276: return "Variable13";
                case 278: return "Variable14";
                case 280: return "Variable15";
                case 282: return "Variable16";
                case 284: return "Variable17";
                case 286: return "Variable18";
                case 288: return "Variable19";
                case 290: return "Variable20";
                case 292: return "Variable21";
                case 294: return "Variable22";
                case 296: return "Variable23";
                case 298: return "Variable24";
                case 300: return "Variable25";
                case 302: return "Variable26";
                case 304: return "Variable27";
                case 306: return "Variable28";
                case 308: return "Variable29";
                case 310: return "Variable30";
                case 312: return "Variable31";
                case 314: return "Variable32";
                case 316: return "Variable33";
                case 318: return "Variable34";
                case 320: return "Variable35";
                case 322: return "Variable36";
                case 324: return "Variable37";
                case 326: return "Variable38";
                case 328: return "Variable39";
                case 330: return "Variable40";
                case 332: return "Variable41";
                case 334: return "Variable42";
                case 336: return "Variable43";
                case 338: return "Variable44";
                case 340: return "Variable45";
                case 342: return "Variable46";
                case 344: return "Variable47";
                case 346: return "Variable48";
                case 348: return "Variable49";
                case 350: return "Variable50";
                case 352: return "Variable 51";
                case 354: return "Variable 52";
                case 356: return "Variable 53 ";
                case 358: return "Variable 54";
                case 360: return "Variable 55";
                case 362: return "Variable 56";
                case 364: return "Variable 57";
                case 366: return "Variable 58";
                case 368: return "Variable 59";
                case 370: return "Variable 60";
                case 372: return "Variable 61";
                case 374: return "Variable 62";
                case 376: return "Variable 63";
                case 378: return "Variable 64";
                case 380: return "Variable 65";
                case 382: return "Variable 66";
                case 384: return "Variable 67";
                case 386: return "Variable 68";
                case 388: return "Variable 69";
                case 390: return "Variable 70";
                case 392: return "Variable 71";
                case 394: return "Variable 72";
                case 396: return "Variable 73";
                case 398: return "Variable 74";
                case 400: return "Variable 75";
                case 402: return "Variable 76";
                case 404: return "Variable 77";
                case 406: return "Variable 78";
                case 408: return "Variable 79";
                case 410: return "Variable 80";
                case 412: return "Variable 81";
                case 414: return "Variable 82";
                case 416: return "Variable 83";
                case 418: return "Variable 84";
                case 420: return "Variable 85";
                case 422: return "Variable 86";
                case 424: return "Variable 87";
                case 426: return "Variable 88";
                case 428: return "Variable 89";
                case 430: return "Variable 90";
                case 432: return "Variable 91";
                case 434: return "Variable 92";
                case 436: return "Variable 93";
                case 438: return "Variable 94";
                case 440: return "Variable 95";
                case 442: return "Variable 96";
                case 444: return "Variable 97";
                case 446: return "Variable 98";
                case 448: return "Variable 99";
                case 450: return "Variable 100";
                case 452: return "Variable 101";
                case 454: return "Variable 102";
                case 456: return "Variable 103";
                case 458: return "Variable 104";
                case 460: return "Variable 105";
                case 462: return "Variable 106";
                case 464: return "Variable 107";
                case 466: return "Variable 108";
                case 468: return "Variable 109";
                case 470: return "Variable 110";
                case 472: return "Variable 111";
                case 474: return "Variable 112";
                case 476: return "Variable 113";
                case 478: return "Variable 114 (duplicate with below!!!)";
                case 480: return "Variable 115";
                case 482: return "Variable 116";
                case 484: return "Variable 117";
                case 486: return "Variable 118";
                case 488: return "Variable 119";
                case 490: return "Variable 120";
                case 492: return "Variable 121";
                case 494: return "Variable 122";
                case 496: return "Variable 123";
                case 498: return "Variable 124";
                case 500: return "Variable 125";
                case 502: return "Variable 126";
                case 504: return "Variable 127";
                case 506: return " Bit field Variables (changed when trap xpos =1)";
                case 570: return "Bit wise variable for level 5 scintlus to indicate what switches are up / down.";
                case 762: return "Unknown";
                case 764: return "2nd byte of xpos to return to when dreaming in the void (first byte is ignored! ";
                case 766: return "2nd byte of ypos to return to when dreaming in the void (first byte is ignored!)";
                case 769: return "Dream Level";
                case 770: return "Difficulty";
                case 771: return "Game options";
                case 774: return "Length of time the player is paralysed for (seconds?)";
                case 785: return "There are 80 of these? For 80 levels? In x_skills the player lore skill is stored in these values";
                case 874: return "Game Clock";
                case 875: return "Game Clock";
                case 876: return "Game Clock";
                case 877: return "Game Clock";
                case 879: return "X_CLOCK 1 !!!!";
                case 880: return "X_CLOCK 2? (related to gem usage)";
                case 881: return "Djinn Capture (x_clock 3?)";
                case 882: return "X Clock 4";
                case 883: return "X Clock 5";
                case 884: return "X Clock 6";
                case 885: return "X Clock 7";
                case 886: return "X Clock 8";
                case 887: return "X Clock 9";
                case 888: return "X Clock 10";
                case 889: return "X Clock 11";
                case 890: return "X Clock 12";
                case 891: return "X Clock 13";
                case 892: return "X clock 14";
                case 893: return "Encryption ends somewhere around here / XCLOCK 15";
                case 894: return "No of items+1";
                case 895: return "These values (0x37d to 0x387) probably have something to do with inventory slot displays";
                case 896: return "Static object for player 0";
                case 897: return "Static object for player 1";
                case 898: return "Static object for player 2";
                case 899: return "Static object for player 3";
                case 900: return "Static object for player 4";
                case 901: return "Static object for player 5";
                case 902: return "Static object for player 6";
                case 903: return "Static object for player 7";
                case 904: return "Mobile Object for player 1";
                case 905: return "Mobile Object for player 2";
                case 906: return "Mobile Object for player 3";
                case 907: return "Mobile Object for player 4";
                case 908: return "Mobile Object for player 5";
                case 909: return "Mobile Object for player 6";
                case 910: return "Mobile Object for player 7";
                case 911: return "Mobile Object for player 8";
                case 912: return "Mobile Object for player 9";
                case 913: return "Mobile Object for player 10";
                case 914: return "Mobile Object for player 11";
                case 915: return "Mobile Object for player 12";
                case 916: return "Mobile Object for player 13";
                case 917: return "Mobile Object for player 14";
                case 918: return "Mobile Object for player 15";
                case 919: return "Mobile Object for player 16";
                case 920: return "Mobile Object for player 17";
                case 921: return "Mobile Object for player 18";
                case 922: return "Mobile Object for player 19";
                case 931: return "Helm (all of these subsequent values are indices into the object list";
                case 932: return "Helm (enchantments are reapply on reload)";
                case 933: return "Chest";
                case 934: return "Chest";
                case 935: return "Gloves";
                case 936: return "Gloves";
                case 937: return "Leggings";
                case 938: return "Leggings";
                case 939: return "Boots";
                case 940: return "Boots";
                case 941: return "TopRightShoulder";
                case 942: return "TopRightShoulder";
                case 943: return "TopLeftShoulder";
                case 944: return "TopLeftShoulder";
                case 945: return "Righthand";
                case 946: return "Righthand";
                case 947: return "LeftHand";
                case 948: return "LeftHand";
                case 949: return "RightRing";
                case 950: return "RightRing";
                case 951: return "LeftRing";
                case 952: return "LeftRing";
                case 953: return "BackPack0";
                case 954: return "BackPack0";
                case 955: return "BackPack1";
                case 956: return "BackPack1";
                case 957: return "BackPack2";
                case 958: return "BackPack2";
                case 959: return "BackPack3";
                case 960: return "BackPack3";
                case 961: return "BackPack4";
                case 962: return "BackPack4";
                case 963: return "BackPack5";
                case 964: return "BackPack5";
                case 965: return "BackPack6";
                case 966: return "BackPack6";
                case 967: return "BackPack7";
                case 968: return "BackPack7";
                case 995: return "First Inventory object";
                case 996: return "First Inventory object";
                case 997: return "First Inventory object";
                case 998: return "First Inventory object";
                case 999: return "First Inventory object";
                case 1000: return "First Inventory object";
                case 1001: return "First Inventory object";
                case 1002: return "First Inventory object";

                default:
                    return "UNIMPLEMENTED";
            }
        }


        }
}
